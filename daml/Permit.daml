module Permit where

template LocalPermit
  with
    id: Int
    master: Party
    issuer: Party
    citizenId: Int
    club: Text
    startDate: Time
    endDate: Time
    timestamp: Time
  where
    signatory issuer
    observer master
    key (id, issuer) : (Int, Party)
    maintainer key._2

    ensure startDate < endDate && issuer /= master

    controller master can
      Permit_Synchronize : ContractId GlobalPermit
        with
          readers: [Party]
        do
        existingPermit <- lookupByKey @GlobalPermit (id, master)
        case existingPermit of
          None -> create GlobalPermit with originalIssuer = issuer, .. 
          Some existingPermitCid  -> do 
            existingPermit <- fetch existingPermitCid
            if existingPermit.originalIssuer == master
              then do
                return existingPermitCid
              else do
                if existingPermit.timestamp < timestamp
                  then do 
                    archive existingPermitCid
                    create GlobalPermit with originalIssuer = issuer, ..
                  else do 
                    return existingPermitCid
    

template GlobalPermit with
    id: Int
    originalIssuer: Party
    master: Party
    readers: [Party]
    citizenId: Int
    club: Text
    startDate: Time
    endDate: Time
    timestamp: Time
  where
    signatory master
    observer readers
    key (id, master) : (Int, Party)
    maintainer key._2

    ensure startDate < endDate
